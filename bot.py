import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from dotenv import load_dotenv
import openai
import asyncio

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram-–±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ OpenAI
openai.api_key = OPENAI_API_KEY

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("üìä –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"))

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    text = (
        "ü§ñ –¢–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ò–ò-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –¥–∞–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑—ã "
        "–Ω–∞ –ª—é–±–æ–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ.\n\n"
        "–ù–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Å–¥–µ–ª–∞–π —Å–∫—Ä–∏–Ω —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ ‚Äî "
        "–∏ –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –æ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.\n\n"
        "üëá –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"
    )
    await message.answer(text, reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏
@dp.message_handler(lambda message: message.text == "üìä –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑")
async def handle_prediction(message: types.Message):
    await message.answer("‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –ø—Ä–æ–≥–Ω–æ–∑ –æ—Ç –ò–ò...")

    # –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º–ø—Ç ‚Äî –º–æ–∂–Ω–æ —É–ª—É—á—à–∞—Ç—å
    gpt_prompt = (
        "–°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –æ–¥–Ω–æ –∏–∑ –±–ª–∏–∂–∞–π—à–∏—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π "
        "(—Ñ—É—Ç–±–æ–ª, —Ç–µ–Ω–Ω–∏—Å, –±–∞—Å–∫–µ—Ç–±–æ–ª), –≤–∫–ª—é—á–∞—è –∫–æ–º–∞–Ω–¥—É, —Å—Ç–∞–≤–∫—É, –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∏ 2-3 –ø—Ä–∏—á–∏–Ω—ã."
    )

    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",  # –°–∞–º–∞—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è
            messages=[
                {"role": "system", "content": "–¢—ã —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –æ–ø—ã—Ç–æ–º –∏ —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞."},
                {"role": "user", "content": gpt_prompt}
            ],
            temperature=1.0,
            max_tokens=500
        )
        result = response.choices[0].message["content"]
        await message.answer(result)

    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –æ—Ç –ò–ò.")
        print("OpenAI error:", e)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
