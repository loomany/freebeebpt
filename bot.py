import os
import base64
from io import BytesIO
from aiogram import Bot, Dispatcher, types
from aiogram.utils import executor
from dotenv import load_dotenv
import asyncio
from openai import AsyncOpenAI

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
ADMIN_ID = int(os.getenv("ADMIN_ID"))

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)
client = AsyncOpenAI(api_key=OPENAI_API_KEY)

registered_users: set[int] = set()

# üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–∑–±–∏—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ + –∫–µ—à–±—ç–∫ —Ç–æ–ª—å–∫–æ –≤ –∫–æ–Ω—Ü–µ
async def split_and_send_with_cashback(full_text: str, message: types.Message):
    max_length = 4000

    cashback_text = (
        "\n\nüíº *–ö–∞–∫ –ø–æ–ø–æ–ª–Ω—è—Ç—å —Å—á—ë—Ç —Å –≤—ã–≥–æ–¥–æ–π?*\n\n"
        "–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç –≤ —Å–≤–æ—ë–º –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ ‚Äî *–±–µ–∑–æ–ø–∞—Å–Ω–æ –∏ —Å –∫–µ—à–±—ç–∫–æ–º* üí∏\n\n"
        "–°–µ—Ä–≤–∏—Å **Paydala & Freebee** —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –ø–ª–∞—Ç—ë–∂–Ω—ã–µ –∫–∞–Ω–∞–ª—ã –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:\n\n"
        "‚Ä¢ Olimpbet\n‚Ä¢ 1xBet\n‚Ä¢ Parimatch\n‚Ä¢ Fonbet\n\n"
        "üîí *100% –ª–µ–≥–∞–ª—å–Ω–æ –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏*\n"
        "üí∏ –ö–µ—à–±—ç–∫ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –∫–∞—Ä—Ç—É –∏–ª–∏ –ª–æ–≥–∏–Ω\n\n"
        "üìé –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏, –º–æ–∂–µ–º –≤—ã–¥–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã, —Å—Ö–µ–º—ã –∏ –ø–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∏–π –Ω–æ–º–µ—Ä\n\n"
        "üì≤ –ù–∞–∂–º–∏ –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ"
    )

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(
        types.InlineKeyboardButton("üí¨ –£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ", url="https://t.me/freebee_admin")
    )

    chunks = [full_text[i:i + max_length] for i in range(0, len(full_text), max_length)]

    for i, chunk in enumerate(chunks):
        if i == len(chunks) - 1:
            await message.answer(chunk + cashback_text, reply_markup=keyboard, parse_mode="Markdown")
        else:
            await message.answer(chunk)

# /start + —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@dp.message_handler(commands=["start"])
async def start_handler(message: types.Message):
    user = message.from_user

    if user.id not in registered_users:
        registered_users.add(user.id)
        text = (
            "üì• –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è!\n\n"
            f"üë§ –ò–º—è: {user.first_name or ''} {user.last_name or ''}\n"
            f"üÜî ID: {user.id}\n"
            f"üí¨ Username: @{user.username or '‚Äî'}\n"
            f"üåç –Ø–∑—ã–∫: {user.language_code or '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}"
        )
        await bot.send_message(chat_id=ADMIN_ID, text=text)

    await message.answer(
        "ü§ñ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –ò–ò-–±–æ—Ç –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ —Ä–∞–∑–±–æ—Ä–∞ –º–∞—Ç—á–µ–π.\n"
        "–û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞—Ç—á–∞ –∏–ª–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç ‚Äî –∏ —è –ø–æ–¥–≥–æ—Ç–æ–≤–ª—é —Ä–∞–∑–≤—ë—Ä–Ω—É—Ç—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É –∫–∞–∫ —Å—Ç–∞—Ç—å—é. ‚öΩüìäüî•"
    )

# –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ —Ñ–æ—Ç–æ
@dp.message_handler(content_types=[types.ContentType.TEXT, types.ContentType.PHOTO])
async def handle_input(message: types.Message):
    await message.answer("üß† –ó–∞–ø—É—Å–∫–∞—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑...")

    user_text = (message.caption or message.text or "").strip()
    user_content = []

    if user_text:
        user_content.append({"type": "text", "text": (
            f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –º–∞—Ç—á: \"{user_text}\".\n\n"
            f"–°–¥–µ–ª–∞–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫—É—é —Å—Ç–∞—Ç—å—é:\n"
            f"1. –ö—Ç–æ –∏–≥—Ä–∞–µ—Ç, –¥–∞—Ç–∞, —Ç—É—Ä–Ω–∏—Ä\n"
            f"2. –§–æ—Ä–º–∞ –∫–æ–º–∞–Ω–¥ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∏–≥—Ä)\n"
            f"3. –û—á–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏, —Å—Ç–∏–ª—å, –º–æ—Ç–∏–≤–∞—Ü–∏—è\n"
            f"4. –°–æ—Å—Ç–∞–≤—ã, —Ç—Ä–∞–≤–º—ã\n"
            f"5. –õ–∏–Ω–∏—è: —á—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã\n"
            f"6. üí¨ –ò—Ç–æ–≥: –∫–æ–≥–æ –±—ã —Ç—ã –≤—ã–±—Ä–∞–ª –ª–∏—á–Ω–æ\n"
            f"7. üéØ –ò—Å—Ö–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä: –ü1, –¢–æ—Ç–∞–ª –ë–æ–ª—å—à–µ 2.5, –û–ó)\n"
            f"8. –ó–∞–∫–ª—é—á–µ–Ω–∏–µ ‚Äî —Å—Ç–æ–∏—Ç –ª–∏ –∏–≥—Ä–∞—Ç—å, –∏ —Å –∫–∞–∫–∏–º —Ä–∏—Å–∫–æ–º\n\n"
            f"–§–æ—Ä–º–∞—Ç ‚Äî –∫–∞–∫ —Å–ø–æ—Ä—Ç–∏–≤–Ω–∞—è —Å—Ç–∞—Ç—å—è. –°—Ç–∏–ª—å —É–≤–µ—Ä–µ–Ω–Ω—ã–π. –ò—Å–ø–æ–ª—å–∑—É–π ‚öΩüìäüî•."
        )})

    if message.photo:
        photo = message.photo[-1]
        buffer = BytesIO()
        await photo.download(destination=buffer)
        buffer.seek(0)
        img_b64 = base64.b64encode(buffer.read()).decode()
        user_content.append({
            "type": "image_url",
            "image_url": {"url": f"data:image/jpeg;base64,{img_b64}"}
        })

    messages = [
        {
            "role": "system",
            "content": "–¢—ã —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫. –ü–∏—à–∏ –∫–∞–∫ –¥–ª—è –±–ª–æ–≥–∞: —É–≤–µ—Ä–µ–Ω–Ω–æ, —Å –≤—ã–≤–æ–¥–∞–º–∏, —Å—Ç–∞–≤–∫–æ–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–µ–π."
        },
        {
            "role": "user",
            "content": user_content
        }
    ]

    try:
        response = await client.chat.completions.create(
            model="gpt-4o",
            messages=messages,
            temperature=1.3,
            max_tokens=2000
        )
        result = response.choices[0].message.content
        await split_and_send_with_cashback(result, message)

    except Exception as e:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ.")
        await message.answer(f"üìõ –î–µ—Ç–∞–ª–∏: {e}")
        print("OpenAI error:", e)

if __name__ == "__main__":
    loop = asyncio.get_event_loop()
    try:
        executor.start_polling(dp, skip_updates=True)
    finally:
        loop.run_until_complete(bot.session.close())
        loop.run_until_complete(client.aclose())
        loop.close()
